{"version":3,"sources":["components/helpers.js","components/create.component.js","components/edit.component.js","Routes.js","App.js","serviceWorker.js","index.js","images/deadpool-logo.png"],"names":["helpers","charactersVisible","document","getElementById","style","display","charactersHidden","Create","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeCharacterName","bind","assertThisInitialized","onChangeShortDescr","onChangeLongDescr","onChangeImg","onSubmit","state","name","shortDescription","description","image","length","e","setState","target","value","_this2","preventDefault","reader","FileReader","file","files","output","onloadend","imagePreviewUrl","result","src","readAsDataURL","obj","substr","indexOf","axios","post","then","history","push","show","alert","_this3","react_default","a","createElement","marginTop","className","type","to","onClick","window","confirm","ref","id","rows","onChange","alt","Component","Edit","input","React","createRef","error","isLoaded","get","match","params","response","data","catch","console","log","put","_this4","concat","Routes","react_router","path","component","App","characters","fetch","res","json","getApi","delete","react_router_dom","logo","src_Routes","map","character","key","deleteCharacter","Collapsible_default","trigger","react_markdown_default","source","Boolean","location","hostname","ReactDOM","render","App_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6e0444d9.chunk.js","sourcesContent":["/*helpers is used for global functions*/\n/*show or hide some parts of components*/\n\nconst helpers = {\n\n    charactersVisible: function(){\n      document.getElementById('charactersList').style.display='block';\n      //console.log(\"charactersVisible\");\n    },\n    charactersHidden: function(){\n      document.getElementById('charactersList').style.display='none';\n      //console.log(\"charactersHidden\");\n    }\n}\n\nexport default helpers;\n","// create.component.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport helpers from './helpers';\n\nexport default class Create extends Component {\n  constructor(props) {\n      super(props);\n      this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\n      this.onChangeShortDescr = this.onChangeShortDescr.bind(this);\n      this.onChangeLongDescr = this.onChangeLongDescr.bind(this);\n      this.onChangeImg = this.onChangeImg.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n\n      this.state = {\n          name: '',\n          shortDescription: '',\n          description:'',\n          image:''\n      }\n\n      const { name } = this.state;\n      const isEnabled =\n      name.length > 0;\n  }\n\n  /*fct to setStage on change*/\n  onChangeCharacterName(e) {\n      this.setState({\n        name: e.target.value\n      })\n  }\n  onChangeShortDescr(e) {\n    this.setState({\n      shortDescription: e.target.value\n    })\n  }\n  onChangeLongDescr(e) {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  onChangeImg(e) {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    let output = document.getElementById('output');\n\n    //base64 convert\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n      //file preview\n      output.src = reader.result\n    }\n    reader.readAsDataURL(file)\n  }\n\n  /*hide characters block when mounting component*/\n  componentDidMount() {\n   helpers.charactersHidden();\n  }\n\n  /*fct submit + send to the api */\n  onSubmit(e) {\n    e.preventDefault();\n    /*check if no empty fieds*/\n    if (this.state.name && this.state.shortDescription && this.state.description && this.state.imagePreviewUrl)\n    {\n      const obj = {\n            name : this.state.name,\n            shortDescription : this.state.shortDescription,\n            description : this.state.description,\n            image : this.state.imagePreviewUrl.substr(this.state.imagePreviewUrl.indexOf(',') + 1)\n          };\n          axios.post('https://character-database.becode.xyz/characters/', obj)\n              .then(\n                helpers.charactersVisible(),\n                this.props.history.push(\"/\")\n              );\n\n      this.setState({\n        name: '',\n        shortDescription: '',\n        description:'',\n        image:'',\n        show: ''\n      })\n    }\n    else {\n      alert(\"No empty field allowed\");\n    }\n  }\n\n/*rendering content*/\n  render() {\n      return (\n          <div style={{ marginTop: 10 }}>\n              <h3>Add New Character</h3>\n              <div className = \"form-group text-right\">\n                  <button type=\"button\" className=\"btn btn-danger\" to=\"/\" onClick={(e) => { if (window.confirm('Do you want leave the character adding?')) this.props.history.push(\"/\"); helpers.charactersVisible() } }>Cancel</button>\n              </div>\n              <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                      <label>Add Character Name:</label>\n                      <textarea  ref=\"nameCh\" type=\"text\" className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"1\" value={this.state.name} onChange={this.onChangeCharacterName}/>\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Add Character Short Description:</label>\n                      <textarea type=\"text\" className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"1\" value={this.state.shortDescription} onChange={this.onChangeShortDescr}/>\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Add Character Long Description:</label>\n                      <textarea type=\"text\" className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={this.state.description} onChange={this.onChangeLongDescr} />\n                  </div>\n                  <div>\n                      <label>Add picture</label>\n                      <div className=\"grid-container-img-add\">\n                        <div className=\"file\"><input className=\"form-control-file\" type=\"file\" name=\"image\" id=\"UploadedFile\" onChange={(e)=>this.onChangeImg(e)} /></div>\n                        <div className=\"preview\"><img id=\"output\" className=\"output\" alt=\"\"/></div>\n                      </div>\n                  </div>\n                  <div className = \"form-group text-right\">\n                      <input type = \"submit\" value=\"Save added character\" className=\"btn btn-primary\"/>\n                  </div>\n              </form>\n          </div>\n      )\n  }//\\end rendering\n}//\\endContent class\n","// edit.component.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport helpers from './helpers';\n\nexport default class Edit extends Component {\n  constructor(props) {\n      super(props);\n      this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\n      this.onChangeShortDescr = this.onChangeShortDescr.bind(this);\n      this.onChangeLongDescr = this.onChangeLongDescr.bind(this);\n      this.onChangeImg = this.onChangeImg.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n      this.input = React.createRef();\n\n      this.state = {\n        error: null,\n        isLoaded: false,\n        name: '',\n        shortDescription: '',\n        description:'',\n        image:'',\n        file: '',\n        imagePreviewUrl: ''\n      }\n  }\n\n  /*api mount*/\n  componentDidMount() {\n    helpers.charactersHidden();\n    axios.get(\"https://character-database.becode.xyz/characters/\"+this.props.match.params.id)\n      .then(\n        (response) => {\n                //console.log(JSON.stringify(response.data));\n                this.setState({\n                  name : response.data.name,\n                  shortDescription : response.data.shortDescription,\n                  description : response.data.description,\n                  //image : response.data.image.substr(this.image.indexOf(',') + 1)\n                  image : response.data.image,\n                });\n                //console.log(response.data.image);\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n  }\n\n  /*fct to setStage on change*/\n  onChangeCharacterName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeShortDescr(e) {\n    this.setState({\n      shortDescription: e.target.value\n    })\n  }\n  onChangeLongDescr(e) {\n    this.setState({\n      description: e.target.value\n    })\n  }\n\n  onChangeImg(e) {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    let output = document.getElementById('output-img');\n    //console.log(output);\n    //base64 convert\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n      //file preview\n      output.src = reader.result\n    }\n    reader.readAsDataURL(file)\n  }\n\n  /*fct submit + update the api */\n  onSubmit(e) {\n    e.preventDefault();\n      /*check if image has been selected otherwise take the previous one*/\n      if (!this.state.imagePreviewUrl) {\n        this.state.imagePreviewUrl = this.state.image;\n      }\n      else {\n        this.state.imagePreviewUrl = this.state.imagePreviewUrl;\n      }\n      /*check if no empty fieds*/\n      if (this.state.name && this.state.shortDescription && this.state.description && this.state.imagePreviewUrl)\n      {\n        const obj = {\n          name : this.state.name,\n          shortDescription : this.state.shortDescription ,\n          description : this.state.description,\n          image : this.state.imagePreviewUrl.substr(this.state.imagePreviewUrl.indexOf(',') + 1)\n        };\n        axios.put('https://character-database.becode.xyz/characters/'+this.props.match.params.id, obj)\n        .then(\n        helpers.charactersVisible(),\n        this.props.history.push(\"/\")\n          );\n      }\n      else {\n        alert(\"No empty field allowed\");\n      }\n}\n  /*rendering content*/\n  render() {\n    return (\n      <div style={{ marginTop: 10 }}>\n          <h3>Edit Character</h3>\n          <div className = \"form-group text-right\">\n              <button type=\"button\" className=\"btn btn-danger\" to=\"/\" onClick={(e) => { if (window.confirm('Do you want leave the character editing?')) this.props.history.push(\"/\"); helpers.charactersVisible() } }>Cancel</button>\n          </div>\n          <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                  <label>Edit Character Name:</label>\n                  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"1\" value={this.state.name} onChange={this.onChangeCharacterName} />\n              </div>\n              <div className=\"form-group\">\n                  <label>Edit Character Short Description:</label>\n                  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"1\" value={this.state.shortDescription} onChange={this.onChangeShortDescr} />\n              </div>\n              <div className=\"form-group\">\n                  <label>Edit Character Long Description:</label>\n                  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={this.state.description} onChange={this.onChangeLongDescr} />\n              </div>\n              <div>\n                  <label>Change picture</label>\n                  <div className=\"grid-container-img-add\">\n                    <div className=\"file\"><input className=\"form-control-file\" type=\"file\" name=\"image\" id=\"UploadedFile\" onChange={(e)=>this.onChangeImg(e)} /></div>\n                    <div className=\"preview\"><img id=\"output-img\" className=\"output\" alt=\"\" src={`data:image/jpeg;base64,${this.state.image}`} /></div>\n                  </div>\n              </div>\n              <div className = \"form-group text-right\">\n                  <input type = \"submit\" value=\"Save edited character\" className=\"btn btn-primary\"/>\n\n              </div>\n\n          </form>\n      </div>\n    )\n  }//\\end rendering\n}//\\end Edit Class\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Create from './components/create.component';\nimport Edit from './components/edit.component';\n//import App from './App';\n\nconst Routes = () => (\n  <Switch>\n      {/*<Route path='/' component={ App } />*/}\n      <Route path='/create' component={ Create } />\n      <Route path='/edit/:id' component={ Edit } />\n  </Switch>\n)\n\nexport default Routes\n","// App.js\n\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Collapsible from 'react-collapsible';\nimport logo from './images/deadpool-logo.png';\nimport axios from 'axios';\nimport helpers from './components/helpers';\nimport Routes from './Routes';\nimport ReactMarkdown from 'react-markdown';\n\nexport default class App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n          characters  : [],\n      };//\\state\n  }//\\constructor\n\n/*function to fetch the api*/\n  getApi() {\n    // Github fetch library : https://github.com/github/fetch\n    // Call the API page\n    fetch('https://character-database.becode.xyz/characters')\n    .then(res => res.json())\n    .then ((result) => {\n      this.setState({\n        characters: result\n      });\n    })\n  }\n/*api update*/\n  componentDidUpdate() {\n  this.getApi()\n  }\n/*api mount*/\n  componentDidMount() {\n    this.getApi()\n  }\n/*fct to delete characters*/\n  deleteCharacter(e){\n    console.log(e)\n    axios.delete(\"https://character-database.becode.xyz/characters/\" + e)\n    .then(res => console.log(res.data));\n  }\n/*rendering content*/\n  render() {\n    const {characters} = this.state;\n    return (\n      <article className=\"container\">\n        <Router>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <Link to={'/'} onClick={ () => helpers.charactersVisible() } className=\"navbar-brand\">React Character Manager</Link>\n              <Link to={'/create'}  onClick={ () => helpers.charactersHidden() } type=\"button\" className=\"btn btn-primary\">Add character</Link>\n\n            </nav> <br/>\n            <div className=\"header\">\n              <img src={logo} alt=\"Deadpool\" className=\"logo\"/>\n            </div>\n            <Routes/>\n              <section id=\"charactersList\">\n              {characters.map(character =>\n                <li\n                    key = { character.id }\n                    className = 'characters'\n                >\n                  <div className=\"grid-container\">\n                      <div className=\"picture\">\n                        <img src={`data:image/jpeg;base64,${character.image}`} alt={ character.name }/>\n                      </div>\n                      <div className=\"content\">\n                        <div className=\"charName\">{ character.name }</div>\n                        <div className=\"charDescr\">{ character.shortDescription }</div>\n                      </div>\n                      <div className=\"buttons\">\n                      <Link className=\"btn btn-success\" to={\"/edit/\" + character.id}>Edit</Link>\n                      <button type=\"button\" className=\"btn btn-danger\" to=\"/\" onClick={(e) => { if (window.confirm('You are about to delete a character... Sure?')) this.deleteCharacter(character.id) } }>Delete</button>\n                      </div>\n                  </div>\n                  <div className=\"showmore\">\n                  <Collapsible trigger=\"Show more\">\n                    <ReactMarkdown source = { character.description } />\n                  </Collapsible>\n                  </div>\n                </li>\n                  )//\\character\n              }{/*\\character.map*/}\n              </section>\n        </Router>\n      </article>\n    );\n  }//\\render\n}//\\class\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n  <App />\n  </HashRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/deadpool-logo.e05636f0.png\";"],"sourceRoot":""}